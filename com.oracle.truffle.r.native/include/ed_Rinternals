/USE_RINTERNALS section/
i
#ifdef FASTR
// packages defining USE_INTERNALS expect certain defs (e.g. isNull) to be there
#ifdef USE_RINTERNALS
#define USE_RINTERNALS_DEFS
#endif
#undef USE_RINTERNALS
#else
.
+1
a
#endif
.
/typedef struct SEXPREC \*SEXP;/
i
#ifdef FASTR
typedef void *SEXP;
#define DATAPTR(x)		R_DATAPTR(x)
void *(R_DATAPTR)(SEXP x);
#else
.
+1
a
#endif
.
/R_GlobalEnv/
i
#ifdef FASTR
LibExtern SEXP FASTR_GlobalEnv();
#define R_GlobalEnv FASTR_GlobalEnv()
#else
.
+1
a
#endif
.
/R_BaseEnv/
i
#ifdef FASTR
LibExtern SEXP FASTR_BaseEnv();
#define R_BaseEnv FASTR_BaseEnv()
#else
.
+1
a
#endif
.
/R_BaseNamespace/
i
#ifdef FASTR
LibExtern SEXP FASTR_BaseNamespace();
#define R_BaseNamespace FASTR_BaseNamespace()
#else
.
+1
a
#endif
.
/R_NamespaceRegistry/
i
#ifdef FASTR
LibExtern SEXP FASTR_NamespaceRegistry();
#define R_NamespaceRegistry FASTR_NamespaceRegistry()
#else
.
+1
a
#endif
.
/R_NilValue;/
i
#ifdef FASTR
LibExtern SEXP FASTR_R_NilValue();
#define R_NilValue FASTR_R_NilValue()
#else
.
+1
a
#endif
.
/R_UnboundValue;/
i
#ifdef FASTR
LibExtern SEXP FASTR_R_UnboundValue();
#define R_UnboundValue FASTR_R_UnboundValue()
#else
.
+1
a
#endif
.
/R_PreserveObject/
i
#ifdef FASTR
SEXP R_PreserveObject(SEXP);
#else
.
+1
a
#endif
.
/#ifdef USE_RINTERNALS/
d
i
#if defined (USE_RINTERNALS_DEFS) && (defined (USE_RINTERNALS) || defined (FASTR))
.
/macro version of R_CheckStack/
i
#endif
#ifdef USE_RINTERNALS

.
w Rinternals.h
